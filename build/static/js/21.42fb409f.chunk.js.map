{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Fade.js","pages/other/LoginRegister.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","value","ref","current","useEventCallback","fn","apply","arguments","dataAttr","property","concat","dataProp","useMounted","mounted","isMounted","usePrevious","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","_fadeStyles","_excluded","fadeStyles","Fade","_ref","_children","children","_ref$transitionClasse","transitionClasses","props","handleEnter","node","isAppearing","onEnter","addEndListener","childRef","status","innerProps","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","LoginRegister","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","changeHandler1","e","changeHandler","submitHandler","preventDefault","axios","post","state","then","response","history","push","catch","error","first_name","last_name","customer_email","mobile_no","sortorder","content","to","headerTop","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","type","placeholder","onSubmit","this","method","onChange","Component"],"mappings":"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","file":"static/js/21.42fb409f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","export var ATTRIBUTE_PREFIX = \"data-rr-ui-\";\nexport var PROPERTY_PREFIX = \"rrUi\";\nexport function dataAttr(property) {\n  return \"\".concat(ATTRIBUTE_PREFIX).concat(property);\n}\nexport function dataProp(property) {\n  return \"\".concat(PROPERTY_PREFIX).concat(property);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import _objectSpread from \"E:\\\\buynaa-customer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:\\\\buynaa-customer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"E:\\\\buynaa-customer\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"className\", \"children\", \"transitionClasses\"];\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _defineProperty(_fadeStyles, ENTERING, 'show'), _defineProperty(_fadeStyles, ENTERED, 'show'), _fadeStyles);\nvar Fade = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      _children = _ref.children,\n      _ref$transitionClasse = _ref.transitionClasses,\n      transitionClasses = _ref$transitionClasse === void 0 ? {} : _ref$transitionClasse,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var handleEnter = useCallback(function (node, isAppearing) {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, _objectSpread(_objectSpread({\n    ref: ref,\n    addEndListener: transitionEndListener\n  }, props), {}, {\n    onEnter: handleEnter,\n    childRef: _children.ref,\n    children: function children(status, innerProps) {\n      return /*#__PURE__*/React.cloneElement(_children, _objectSpread(_objectSpread({}, innerProps), {}, {\n        className: classNames('fade', className, _children.props.className, fadeStyles[status], transitionClasses[status])\n      }));\n    }\n  }));\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","// import PropTypes from \"prop-types\";\r\nimport React, { Fragment, Component } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport  axios from \"axios\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nexport default class LoginRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      customer_email: \"\",\r\n      mobile_no: \"\",\r\n      sortorder:\"\",\r\n      selectedFile: null,\r\n      status: \"\"\r\n    };\r\n  }\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n  \r\n    axios.post(\"http://35.154.86.59/api/user/customersignup\", this.state)\r\n      .then((response) => {\r\n        console.log(response);  \r\n        \r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n       \r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Buynaa | Login</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Compare page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Login Register\r\n      </BreadcrumbsItem> */}\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"login-register-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row d-flex align-items-center justify-content-center\">\r\n\r\n              <div className=\"col-lg-7 col-md-12 ml-auto mr-auto\">\r\n                <div className=\"login-register-wrapper\">\r\n                  <Tab.Container defaultActiveKey=\"login\">\r\n                    <Nav variant=\"pills\" className=\"login-register-tab-list\">\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"login\">\r\n                          <h4>Login</h4>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link eventKey=\"register\">\r\n                          <h4>Register</h4>\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                    <Tab.Content>\r\n                      <Tab.Pane eventKey=\"login\">\r\n                        <div className=\"login-form-container\">\r\n                          <div className=\"login-register-form\">\r\n                            <form>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"user-name\"\r\n                                placeholder=\"Username\"\r\n                              />\r\n                              <input\r\n                                type=\"password\"\r\n                                name=\"user-password\"\r\n                                placeholder=\"Password\"\r\n                              />\r\n                              <input\r\n                                name=\"user-email\"\r\n                                placeholder=\"Email\"\r\n                                type=\"email\"\r\n                              />\r\n                              <div className=\"button-box\">\r\n                                <div className=\"login-toggle-btn\">\r\n                                  <input type=\"checkbox\" />\r\n                                  <label className=\"ml-10\">Remember me</label>\r\n                                  <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                                    Forgot Password?\r\n                                  </Link>\r\n                                </div>\r\n                                <button type=\"submit\">\r\n                                  <span>Login</span>\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Tab.Pane>\r\n                      <Tab.Pane eventKey=\"register\">\r\n                        <div className=\"login-form-container\" >\r\n                          <div className=\"login-register-form\">\r\n                            <form className=\" text-center \" onSubmit={this.submitHandler} method=\"post\">\r\n                            \r\n                               <input\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n                                placeholder=\"Enter Your Firstname\"\r\n                                value={this.state.first_name}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                                 <input\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n                                placeholder=\"Enter Your Lastname\"\r\n                                value={this.state.last_name}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                                 <input\r\n                                type=\"email\"\r\n                                name=\"customer_email\"\r\n                                placeholder=\"Enter Your Email\"\r\n                                value={this.state.customer_email}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                              <input\r\n                                type=\"number\"\r\n                                name=\"mobile_no\"\r\n                                placeholder=\"Enter Your Mobile No.\"\r\n                                value={this.state.mobile_no}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                                  <input\r\n                                type=\"number\"\r\n                                name=\"sortorder\"\r\n                                placeholder=\"Sort Order\"\r\n                                value={this.state.sortorder}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                              <div className=\"button-box\">\r\n                                <button type=\"submit\">\r\n                                  <span>Register</span>\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </Tab.Pane>\r\n                    </Tab.Content>\r\n                  </Tab.Container>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n}\r\n}\r\n\r\n"],"sourceRoot":""}