{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","components/product/sub-components/ProductRating.js","components/product/ProductModal.js","components/product/ProductGridSingleTwo.js","wrappers/product/ProductGridTwo.js","wrappers/product/ShopProducts.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ShopSearch.js","components/product/ShopCategories.js","components/product/ShopColor.js","components/product/ShopSize.js","components/product/ShopTag.js","wrappers/product/ShopSidebar.js","pages/shop/ShopListStandard.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","ProductRating","ratingValue","rating","i","push","key","connect","state","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","useState","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","data","color","selectedProductColor","setSelectedProductColor","size","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","process","alt","name","currencySymbol","shortDescription","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ProductGridSingleTwo","cartItem","discountedPrice","sliderClassName","spaceBottomClass","colorClass","titlePriceClass","modalShow","setModalShow","useToasts","dress","setDress","a","fetch","response","json","getData","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","_id","to","product_img","style","width","height","variation","length","id","quantity","product_name","sell_price","ProductModal","cartitem","ownProps","products","getProducts","productData","category","limit","currencyData","cartItems","wishlistItems","wishlistData","compareItems","compareData","dispatch","selectedProductSize","filter","ShopProducts","layout","ShopTopAction","getLayout","getFilterSortParams","productCount","sortedProductCount","e","setActiveLayout","ShopTopbar","ShopSearch","action","placeholder","ShopCategories","categories","getSortParams","setActiveSort","ShopColor","colors","ShopSize","sizes","ShopTag","tags","tag","ShopSidebar","sideSpaceClass","uniqueCategories","getIndividualCategories","uniqueColors","getIndividualColors","uniqueSizes","getProductsIndividualSizes","uniqueTags","getIndividualTags","location","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","pathname","getSortedProducts","filterSortedProducts","slice","content","headerTop","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"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","file":"static/js/30.294a4058.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\n// import { getProductCartQuantity } from \"../../helpers/product\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Rating from \"./sub-components/ProductRating\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ProductModal(props) {\r\n  const { product } = props;\r\n  const { currency } = props;\r\n  const { discountedprice } = props;\r\n  const { finalproductprice } = props;\r\n  const { finaldiscountedprice } = props;\r\n\r\n  const [gallerySwiper, getGallerySwiper] = useState(null);\r\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\r\n  const [selectedProductColor, setSelectedProductColor] = useState(\r\n    product.data ? product.data[0].color : \"\"\r\n  );\r\n  // const [selectedProductSize, setSelectedProductSize] = useState(\r\n  //   product.data ? product.data[0].size[0].name : \"\"\r\n  // );\r\n  const [productStock, setProductStock] = useState(\r\n    product.data ? product.data[0].size[0].stock : product.stock\r\n  );\r\n  const [quantityCount, setQuantityCount] = useState(1);\r\n\r\n  const wishlistItem = props.wishlistitem;\r\n  const compareItem = props.compareitem;\r\n\r\n  const addToCart = props.addtocart;\r\n  const addToWishlist = props.addtowishlist;\r\n  const addToCompare = props.addtocompare;\r\n\r\n  const addToast = props.addtoast;\r\n  const cartItems = props.cartitems;\r\n\r\n  // const productCartQty = getProductCartQuantity(\r\n  //   cartItems,\r\n  //   product,\r\n  //   selectedProductColor,\r\n  //   selectedProductSize\r\n  // );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gallerySwiper !== null &&\r\n      gallerySwiper.controller &&\r\n      thumbnailSwiper !== null &&\r\n      thumbnailSwiper.controller\r\n    ) {\r\n      gallerySwiper.controller.control = thumbnailSwiper;\r\n      thumbnailSwiper.controller.control = gallerySwiper;\r\n    }\r\n  }, [gallerySwiper, thumbnailSwiper]);\r\n\r\n  const gallerySwiperParams = {\r\n    getSwiper: getGallerySwiper,\r\n    spaceBetween: 10,\r\n    loopedSlides: 4,\r\n    loop: true\r\n  };\r\n\r\n  const thumbnailSwiperParams = {\r\n    getSwiper: getThumbnailSwiper,\r\n    spaceBetween: 10,\r\n    slidesPerView: 4,\r\n    loopedSlides: 4,\r\n    touchRatio: 0.2,\r\n    freeMode: true,\r\n    loop: true,\r\n    slideToClickedSlide: true,\r\n    navigation: {\r\n      nextEl: \".swiper-button-next\",\r\n      prevEl: \".swiper-button-prev\"\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        className=\"product-quickview-modal-wrapper\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n              <div className=\"product-large-image-wrapper\">\r\n                <Swiper {...gallerySwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={process.env.PUBLIC_URL + single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n              <div className=\"product-small-image-wrapper mt-15\">\r\n                <Swiper {...thumbnailSwiperParams}>\r\n                  {product.image &&\r\n                    product.image.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              src={process.env.PUBLIC_URL + single}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\r\n              <div className=\"product-details-content quickview-content\">\r\n                <h2>{product.name}</h2>\r\n                <div className=\"product-details-price\">\r\n                  {discountedprice !== null ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {currency.currencySymbol + finaldiscountedprice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {currency.currencySymbol + finalproductprice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <span>{currency.currencySymbol + finalproductprice} </span>\r\n                  )}\r\n                </div>\r\n                {product.rating && product.rating > 0 ? (\r\n                  <div className=\"pro-details-rating-wrap\">\r\n                    <div className=\"pro-details-rating\">\r\n                      <Rating ratingValue={product.rating} />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"pro-details-list\">\r\n                  <p>{product.shortDescription}</p>\r\n                </div>\r\n\r\n                {product.data ? (\r\n                  <div className=\"pro-details-size-color\">\r\n                    <div className=\"pro-details-color-wrap\">\r\n                      <span>Color</span>\r\n                      <div className=\"pro-details-color-content\">\r\n                        {product.data.map((single, key) => {\r\n                          return (\r\n                            <label\r\n                              className={`pro-details-color-content--single ${single.color}`}\r\n                              key={key}\r\n                            >\r\n                              <input\r\n                                type=\"radio\"\r\n                                value={single.color}\r\n                                name=\"product-color\"\r\n                                checked={\r\n                                  single.color === selectedProductColor\r\n                                    ? \"checked\"\r\n                                    : \"\"\r\n                                }\r\n                                onChange={() => {\r\n                                  setSelectedProductColor(single.color);\r\n                                  // setSelectedProductSize(single.size[0].name);\r\n                                  setProductStock(single.size[0].stock);\r\n                                  setQuantityCount(1);\r\n                                }}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                            </label>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pro-details-size\">\r\n                      <span>Size</span>\r\n                      <div className=\"pro-details-size-content\">\r\n                        {product.data &&\r\n                          product.data.map(single => {\r\n                            return single.color === selectedProductColor\r\n                              ? single.size.map((singleSize, key) => {\r\n                                  return (\r\n                                    <label\r\n                                      className={`pro-details-size-content--single`}\r\n                                      key={key}\r\n                                    >\r\n                                      {/* <input\r\n                                        type=\"radio\"\r\n                                        value={singleSize.name}\r\n                                        checked={\r\n                                          singleSize.name ===\r\n                                          selectedProductSize\r\n                                            ? \"checked\"\r\n                                            : \"\"\r\n                                        }\r\n                                        onChange={() => {\r\n                                          setSelectedProductSize(\r\n                                            singleSize.name\r\n                                          );\r\n                                          setProductStock(singleSize.stock);\r\n                                          setQuantityCount(1);\r\n                                        }}\r\n                                      /> */}\r\n                                      <span className=\"size-name\">\r\n                                        {singleSize.name}\r\n                                      </span>\r\n                                    </label>\r\n                                  );\r\n                                })\r\n                              : \"\";\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {product.affiliateLink ? (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      <a\r\n                        href={product.affiliateLink}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Buy Now\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"cart-plus-minus\">\r\n                      <button\r\n                        onClick={() =>\r\n                          setQuantityCount(\r\n                            quantityCount > 1 ? quantityCount - 1 : 1\r\n                          )\r\n                        }\r\n                        className=\"dec qtybutton\"\r\n                      >\r\n                        -\r\n                      </button>\r\n                      <input\r\n                        className=\"cart-plus-minus-box\"\r\n                        type=\"text\"\r\n                        value={quantityCount}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        // onClick={() =>\r\n                        //   setQuantityCount(\r\n                        //     quantityCount < productStock - productCartQty\r\n                        //       ? quantityCount + 1\r\n                        //       : quantityCount\r\n                        //   )\r\n                        // }\r\n                        className=\"inc qtybutton\"\r\n                      >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      {productStock && productStock > 0 ? (\r\n                        <button\r\n                          onClick={() =>\r\n                            addToCart(\r\n                              product,\r\n                              addToast,\r\n                              quantityCount,\r\n                              selectedProductColor,\r\n                              // selectedProductSize\r\n                            )\r\n                          }\r\n                          // disabled={productCartQty >= productStock}\r\n                        >\r\n                          {\" \"}\r\n                          Add To Cart{\" \"}\r\n                        </button>\r\n                      ) : (\r\n                        <button disabled>Out of Stock</button>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"pro-details-wishlist\">\r\n                      <button\r\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={wishlistItem !== undefined}\r\n                        title={\r\n                          wishlistItem !== undefined\r\n                            ? \"Added to wishlist\"\r\n                            : \"Add to wishlist\"\r\n                        }\r\n                        onClick={() => addToWishlist(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-like\" />\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-compare\">\r\n                      <button\r\n                        className={compareItem !== undefined ? \"active\" : \"\"}\r\n                        disabled={compareItem !== undefined}\r\n                        title={\r\n                          compareItem !== undefined\r\n                            ? \"Added to compare\"\r\n                            : \"Add to compare\"\r\n                        }\r\n                        onClick={() => addToCompare(product, addToast)}\r\n                      >\r\n                        <i className=\"pe-7s-shuffle\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProductModal.propTypes = {\r\n  addtoast: PropTypes.func,\r\n  addtocart: PropTypes.func,\r\n  addtocompare: PropTypes.func,\r\n  addtowishlist: PropTypes.func,\r\n  cartitems: PropTypes.array,\r\n  compareitem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  discountedprice: PropTypes.number,\r\n  finaldiscountedprice: PropTypes.number,\r\n  finalproductprice: PropTypes.number,\r\n  onHide: PropTypes.func,\r\n  product: PropTypes.object,\r\n  show: PropTypes.bool,\r\n  wishlistitem: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartitems: state.cartData\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductModal);\r\n","import Axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport ProductModal from \"./ProductModal\";\r\n\r\nconst ProductGridSingleTwo = ({\r\n  product,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItem,\r\n  wishlistItem,\r\n  discountedPrice,\r\n  compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  // const [users, setUsers] = useState([]);\r\n  // const getUsers = async () => {\r\n  //   const res = await Axios.get(\"http://35.154.86.59/api/admin/getproduct\")\r\n  //     .then(data => {\r\n  //       console.log(data);\r\n  //       console.log(data.data.data.data);\r\n  //       setUsers(data.data.data);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n  // useEffect(() => {\r\n  //   getUsers();\r\n  // }, []);\r\n\r\n  const [dress, setDress] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n\r\n    async function getData() {\r\n      const response = await fetch(\"http://35.154.86.59/api/admin/getproduct\");\r\n\r\n      const data = await response.json();\r\n\r\n      setDress(data.data);\r\n    }\r\n  }, [setDress]);\r\n\r\n  discountedPrice = getDiscountPrice(product.price, product.discount);\r\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\r\n  const finalDiscountedPrice = +(\r\n    discountedPrice * currency.currencyRate\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <Fragment>\r\n      {dress.map(product => (\r\n        <div\r\n          className={`col-xl-3 col-md-6 col-lg-4 col-sm-6 ${\r\n            sliderClassName ? sliderClassName : \"\"\r\n          }`}\r\n          key={product._id}\r\n        >\r\n          <div\r\n            className={`product-wrap-2 ${\r\n              spaceBottomClass ? spaceBottomClass : \"\"\r\n            } ${colorClass ? colorClass : \"\"} `}\r\n          >\r\n            <div className=\"product-img\">\r\n              <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                <img\r\n                  className=\"default-img\"\r\n                  src={product.product_img[0]}\r\n                  alt=\"\"\r\n                  style={{ width: \"200px\", height: \"250px\" }}\r\n                />\r\n\r\n                <img\r\n                  className=\"hover-img\"\r\n                  src={product.product_img[1]}\r\n                  alt=\"\"\r\n                  style={{ width: \"200px\", height: \"250px\" }}\r\n                />\r\n              </Link>\r\n              {/* {product.discount || product.new ? (\r\n                <div className=\"product-img-badges\">\r\n                  {product.discount ? (\r\n                    <span className=\"pink\">-{product.discount}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {product.new ? <span className=\"purple\">New</span> : \"\"}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )} */}\r\n\r\n              <div className=\"product-action-2\">\r\n                {product.affiliateLink ? (\r\n                  <a\r\n                    href={product.affiliateLink}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                    title=\"Buy now\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                  </a>\r\n                ) : product.variation && product.variation.length >= 1 ? (\r\n                  <Link\r\n                    to={`${process.env.PUBLIC_URL}/product/${product.id}`}\r\n                    title=\"Select options\"\r\n                  >\r\n                    <i className=\"fa fa-cog\"></i>\r\n                  </Link>\r\n                ) : product.stock && product.stock > 0 ? (\r\n                  <button\r\n                    onClick={() => addToCart(product, addToast)}\r\n                    className={\r\n                      cartItem !== undefined && cartItem.quantity > 0\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }\r\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\r\n                    title={\r\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-shopping-cart\"></i>{\" \"}\r\n                  </button>\r\n                ) : (\r\n                  <button disabled className=\"active\" title=\"Out of stock\">\r\n                    <i className=\"fa fa-shopping-cart\"></i>\r\n                  </button>\r\n                )}\r\n\r\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\r\n                  <i className=\"fa fa-eye\"></i>\r\n                </button>\r\n\r\n                <button\r\n                  className={compareItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={compareItem !== undefined}\r\n                  title={\r\n                    compareItem !== undefined\r\n                      ? \"Added to compare\"\r\n                      : \"Add to compare\"\r\n                  }\r\n                  onClick={() => addToCompare(product, addToast)}\r\n                >\r\n                  <i className=\"fa fa-retweet\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"product-content-2\">\r\n              <div\r\n                className={`title-price-wrap-2 ${\r\n                  titlePriceClass ? titlePriceClass : \"\"\r\n                }`}\r\n              >\r\n                <h3>\r\n                  <Link to={process.env.PUBLIC_URL + \"/product/\" + product._id}>\r\n                    {product.product_name}\r\n                  </Link>\r\n                </h3>\r\n                <div className=\"price-2\">\r\n                  <Fragment>\r\n                    <span>₹ {product.sell_price}</span>\r\n                  </Fragment>\r\n                </div>\r\n              </div>\r\n              <div className=\"pro-wishlist-2\">\r\n                <button\r\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                  disabled={wishlistItem !== undefined}\r\n                  title={\r\n                    wishlistItem !== undefined\r\n                      ? \"Added to wishlist\"\r\n                      : \"Add to wishlist\"\r\n                  }\r\n                  onClick={() => addToWishlist(product, addToast)}\r\n                >\r\n                  <i className=\"fa fa-heart-o\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {/* product modal */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        product={product}\r\n        currency={currency}\r\n        discountedprice={discountedPrice}\r\n        finalproductprice={finalProductPrice}\r\n        finaldiscountedprice={finalDiscountedPrice}\r\n        cartitem={cartItem}\r\n        wishlistitem={wishlistItem}\r\n        compareitem={compareItem}\r\n        addtocart={addToCart}\r\n        addtowishlist={addToWishlist}\r\n        addtocompare={addToCompare}\r\n        addtoast={addToast}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridSingleTwo.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItem: PropTypes.object,\r\n  compareItem: PropTypes.object,\r\n  currency: PropTypes.object,\r\n  product: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  titlePriceClass: PropTypes.string,\r\n  wishlistItem: PropTypes.object,\r\n};\r\n\r\nexport default ProductGridSingleTwo;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../helpers/product\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\r\nimport { addToCompare } from \"../../redux/actions/compareActions\";\r\nimport ProductGridSingleTwo from \"../../components/product/ProductGridSingleTwo\";\r\n\r\nconst ProductGridTwo = ({\r\n  products,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass,\r\n  titlePriceClass,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map(product => {\r\n        return (\r\n          <ProductGridSingleTwo\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            colorClass={colorClass}\r\n            product={product}\r\n            currency={currency}\r\n            addToCart={addToCart}\r\n            addToWishlist={addToWishlist}\r\n            addToCompare={addToCompare}\r\n            cartItem={\r\n              cartItems.filter(cartItem => cartItem.id === product.id)[0]\r\n            }\r\n            wishlistItem={\r\n              wishlistItems.filter(\r\n                wishlistItem => wishlistItem.id === product.id\r\n              )[0]\r\n            }\r\n            compareItem={\r\n              compareItems.filter(\r\n                compareItem => compareItem.id === product.id\r\n              )[0]\r\n            }\r\n            key={product.id}\r\n            titlePriceClass={titlePriceClass}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridTwo.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  titlePriceClass: PropTypes.string,\r\n  wishlistItems: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    products: getProducts(\r\n      state.productData.products,\r\n      ownProps.category,\r\n      ownProps.type,\r\n      ownProps.limit\r\n    ),\r\n    currency: state.currencyData,\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridTwo);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ProductGridTwo from \"./ProductGridTwo\";\r\n\r\nconst ShopProducts = ({ products, layout }) => {\r\n  return (\r\n    <div className=\"shop-bottom-area mt-35\">\r\n      <div className={`row ${layout ? layout : \"\"}`}>\r\n        <ProductGridTwo products={products} spaceBottomClass=\"mb-25\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopProducts.propTypes = {\r\n  layout: PropTypes.string,\r\n  products: PropTypes.array,\r\n};\r\n\r\nexport default ShopProducts;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div>\r\n        <p>\r\n          Showing {sortedProductCount} of {productCount} result\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import React from \"react\";\r\n\r\nconst ShopSearch = () => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Search </h4>\r\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\r\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\r\n          <input type=\"text\" placeholder=\"Search here...\" />\r\n          <button>\r\n            <i className=\"pe-7s-search\" />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSearch;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\r\n      <div className=\"sidebar-widget-list mt-30\">\r\n        {categories ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"category\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Categories\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"category\", category);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No categories found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopColor = ({ colors, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Color </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"color\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Colors{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      onClick={e => {\r\n                        getSortParams(\"color\", color);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /> {color}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No colors found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopSize = ({ sizes, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-40\">\r\n      <h4 className=\"pro-sidebar-title\">Size </h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {sizes ? (\r\n          <ul>\r\n            <li>\r\n              <div className=\"sidebar-widget-list-left\">\r\n                <button\r\n                  onClick={e => {\r\n                    getSortParams(\"size\", \"\");\r\n                    setActiveSort(e);\r\n                  }}\r\n                >\r\n                  <span className=\"checkmark\" /> All Sizes{\" \"}\r\n                </button>\r\n              </div>\r\n            </li>\r\n            {sizes.map((size, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <button\r\n                      className=\"text-uppercase\"\r\n                      onClick={e => {\r\n                        getSortParams(\"size\", size);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" />\r\n                      {size}{\" \"}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No sizes found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSize.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  sizes: PropTypes.array\r\n};\r\n\r\nexport default ShopSize;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopTag = ({ tags, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-50\">\r\n      <h4 className=\"pro-sidebar-title\">Tag </h4>\r\n      <div className=\"sidebar-widget-tag mt-25\">\r\n        {tags ? (\r\n          <ul>\r\n            {tags.map((tag, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <button\r\n                    onClick={e => {\r\n                      getSortParams(\"tag\", tag);\r\n                      setActiveSort(e);\r\n                    }}\r\n                  >\r\n                    {tag}\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          \"No tags found\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTag.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  tags: PropTypes.array\r\n};\r\n\r\nexport default ShopTag;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport {\r\n  getIndividualCategories,\r\n  getIndividualTags,\r\n  getIndividualColors,\r\n  getProductsIndividualSizes\r\n} from \"../../helpers/product\";\r\nimport ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\nimport ShopTag from \"../../components/product/ShopTag\";\r\n\r\nconst ShopSidebar = ({ products, getSortParams, sideSpaceClass }) => {\r\n  const uniqueCategories = getIndividualCategories(products);\r\n  const uniqueColors = getIndividualColors(products);\r\n  const uniqueSizes = getProductsIndividualSizes(products);\r\n  const uniqueTags = getIndividualTags(products);\r\n\r\n  return (\r\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\r\n      {/* shop search */}\r\n      <ShopSearch />\r\n\r\n      {/* filter by categories */}\r\n      <ShopCategories\r\n        categories={uniqueCategories}\r\n        getSortParams={getSortParams}\r\n      />\r\n\r\n      {/* filter by color */}\r\n      <ShopColor colors={uniqueColors} getSortParams={getSortParams} />\r\n\r\n      {/* filter by size */}\r\n      <ShopSize sizes={uniqueSizes} getSortParams={getSortParams} />\r\n\r\n      {/* filter by tag */}\r\n      <ShopTag tags={uniqueTags} getSortParams={getSortParams} />\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string\r\n};\r\n\r\nexport default ShopSidebar;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport Paginator from \"react-hooks-paginator\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopSidebar from \"../../wrappers/product/ShopSidebar\";\r\nimport ShopTopbar from \"../../wrappers/product/ShopTopbar\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListStandard = ({ location, products }) => {\r\n  const [layout, setLayout] = useState(\"list\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n  const pageLimit = 15;\r\n  const { pathname } = location;\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Flone | Shop Page</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Shop\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                {/* shop sidebar */}\r\n                <ShopSidebar\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                  sideSpaceClass=\"mr-30\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                {/* shop topbar default */}\r\n                <ShopTopbar\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopListStandard.propTypes = {\r\n  location: PropTypes.object,\r\n  products: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.productData.products,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShopListStandard);\r\n"],"sourceRoot":""}